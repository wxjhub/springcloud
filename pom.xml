<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vp.cloud</groupId>
    <artifactId>spring-cloud</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <!--每个子模块-->
    <modules>
        <module>eureka-server</module>
        <module>service-number</module>
        <module>service-order</module>
        <module>zuul-server</module>
        <module>config-server</module>
        <module>config-client</module>
        <module>service-order-feign</module>
    </modules>

    <!--定义版本号-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <springboot>2.5.12</springboot>
        <springcloud>Dalston.SR1</springcloud>
        <springserver>1.3.1.RELEASE</springserver>
        <springmybatis>1.3.0</springmybatis>
    </properties>

    <!--springcloud整合eureka注册中心-->
    <dependencyManagement>
        <dependencies>
            <!--springboot和springcloud自定义pom用法，不使用parent-starter-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${springboot}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot}</version>
                <scope>test</scope>
            </dependency>
            <!--mybatis和springboot整合-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${springmybatis}</version>
            </dependency>
            <!--eureka引入包，自定义pom用法-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
                <version>${springserver}</version>
            </dependency>
            <!--用eureka-server前台会返回xml格式-->
            <!--<dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka-server</artifactId>
                <version>${springserver}</version>
            </dependency>-->
            <!--配置中心-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-config</artifactId>
                <version>${springserver}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${springserver}</version>
            </dependency>
            <!--实现负载均衡用-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-ribbon</artifactId>
                <version>${springserver}</version>
            </dependency>
            <!--接口网关zuul-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zuul</artifactId>
                <version>${springserver}</version>
            </dependency>
            <!--Feign客户端,自带负载均衡，策略需要自己在yml中定义，默认负载均衡轮询算法-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-feign</artifactId>
                <version>${springserver}</version>
            </dependency>
            <!--Hystrix解决雪崩效应-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-hystrix</artifactId>
                <version>${springserver}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
</project>